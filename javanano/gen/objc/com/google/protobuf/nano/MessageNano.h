//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/andrefonseca/Documents/PodsFolders/protobuf/javanano/src/main/java/com/google/protobuf/nano/MessageNano.java
//

#include "J2ObjC_header.h"

#pragma push_macro("ComGoogleProtobufNanoMessageNano_INCLUDE_ALL")
#ifdef ComGoogleProtobufNanoMessageNano_RESTRICT
#define ComGoogleProtobufNanoMessageNano_INCLUDE_ALL 0
#else
#define ComGoogleProtobufNanoMessageNano_INCLUDE_ALL 1
#endif
#undef ComGoogleProtobufNanoMessageNano_RESTRICT

#if !defined (ComGoogleProtobufNanoMessageNano_) && (ComGoogleProtobufNanoMessageNano_INCLUDE_ALL || defined(ComGoogleProtobufNanoMessageNano_INCLUDE))
#define ComGoogleProtobufNanoMessageNano_

@class ComGoogleProtobufNanoCodedInputByteBufferNano;
@class ComGoogleProtobufNanoCodedOutputByteBufferNano;
@class IOSByteArray;

/*!
 @brief Abstract interface implemented by Protocol Message objects.
 @author wink@@google.com Wink Saville
 */
@interface ComGoogleProtobufNanoMessageNano : NSObject {
 @public
  volatile_jint cachedSize_;
}

#pragma mark Public

- (instancetype)init;

/*!
 @brief Provides support for cloning.
 This only works if you specify the generate_clone method.
 */
- (ComGoogleProtobufNanoMessageNano *)clone;

/*!
 @brief Get the number of bytes required to encode this message.
 Returns the cached size or calls getSerializedSize which
 sets the cached size. This is used internally when serializing
 so the size is only computed once. If a member is modified
 then this could be stale call getSerializedSize if in doubt.
 */
- (jint)getCachedSize;

/*!
 @brief Computes the number of bytes required to encode this message.
 The size is cached and the cached result can be retrieved
 using getCachedSize().
 */
- (jint)getSerializedSize;

/*!
 @brief Parse <code>input</code> as a message of this type and merge it with the
 message being built.
 */
- (ComGoogleProtobufNanoMessageNano *)mergeFromWithComGoogleProtobufNanoCodedInputByteBufferNano:(ComGoogleProtobufNanoCodedInputByteBufferNano *)input;

/*!
 @brief Parse <code>data</code> as a message of this type and merge it with the
 message being built.
 */
+ (id)mergeFromWithComGoogleProtobufNanoMessageNano:(ComGoogleProtobufNanoMessageNano *)msg
                                      withByteArray:(IOSByteArray *)data;

/*!
 @brief Parse <code>data</code> as a message of this type and merge it with the
 message being built.
 */
+ (id)mergeFromWithComGoogleProtobufNanoMessageNano:(ComGoogleProtobufNanoMessageNano *)msg
                                      withByteArray:(IOSByteArray *)data
                                            withInt:(jint)off
                                            withInt:(jint)len;

/*!
 @brief Compares two <code>MessageNano</code>s and returns true if the message's are the same class and
 have serialized form equality (i.e. all of the field values are the same).
 */
+ (jboolean)messageNanoEqualsWithComGoogleProtobufNanoMessageNano:(ComGoogleProtobufNanoMessageNano *)a
                             withComGoogleProtobufNanoMessageNano:(ComGoogleProtobufNanoMessageNano *)b;

/*!
 @brief Serialize to a byte array.
 @return byte array with the serialized data.
 */
+ (IOSByteArray *)toByteArrayWithComGoogleProtobufNanoMessageNano:(ComGoogleProtobufNanoMessageNano *)msg;

/*!
 @brief Serialize to a byte array starting at offset through length.
 The
 method getSerializedSize must have been called prior to calling
 this method so the proper length is know.  If an attempt to
 write more than length bytes OutOfSpaceException will be thrown
 and if length bytes are not written then IllegalStateException
 is thrown.
 */
+ (void)toByteArrayWithComGoogleProtobufNanoMessageNano:(ComGoogleProtobufNanoMessageNano *)msg
                                          withByteArray:(IOSByteArray *)data
                                                withInt:(jint)offset
                                                withInt:(jint)length;

/*!
 @brief Returns a string that is (mostly) compatible with ProtoBuffer's TextFormat.
 Note that groups
 (which are deprecated) are not serialized with the correct field name.
 <p>This is implemented using reflection, so it is not especially fast nor is it guaranteed
 to find all fields if you have method removal turned on for proguard.
 */
- (NSString *)description;

/*!
 @brief Serializes the message and writes it to <code>output</code>.
 @param output the output to receive the serialized form.
 @throws IOException if an error occurred writing to <code>output</code>.
 */
- (void)writeToWithComGoogleProtobufNanoCodedOutputByteBufferNano:(ComGoogleProtobufNanoCodedOutputByteBufferNano *)output;

#pragma mark Protected

/*!
 @brief Computes the number of bytes required to encode this message.
 This does not update the
 cached size.
 */
- (jint)computeSerializedSize;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleProtobufNanoMessageNano)

FOUNDATION_EXPORT IOSByteArray *ComGoogleProtobufNanoMessageNano_toByteArrayWithComGoogleProtobufNanoMessageNano_(ComGoogleProtobufNanoMessageNano *msg);

FOUNDATION_EXPORT void ComGoogleProtobufNanoMessageNano_toByteArrayWithComGoogleProtobufNanoMessageNano_withByteArray_withInt_withInt_(ComGoogleProtobufNanoMessageNano *msg, IOSByteArray *data, jint offset, jint length);

FOUNDATION_EXPORT id ComGoogleProtobufNanoMessageNano_mergeFromWithComGoogleProtobufNanoMessageNano_withByteArray_(ComGoogleProtobufNanoMessageNano *msg, IOSByteArray *data);

FOUNDATION_EXPORT id ComGoogleProtobufNanoMessageNano_mergeFromWithComGoogleProtobufNanoMessageNano_withByteArray_withInt_withInt_(ComGoogleProtobufNanoMessageNano *msg, IOSByteArray *data, jint off, jint len);

FOUNDATION_EXPORT jboolean ComGoogleProtobufNanoMessageNano_messageNanoEqualsWithComGoogleProtobufNanoMessageNano_withComGoogleProtobufNanoMessageNano_(ComGoogleProtobufNanoMessageNano *a, ComGoogleProtobufNanoMessageNano *b);

FOUNDATION_EXPORT void ComGoogleProtobufNanoMessageNano_init(ComGoogleProtobufNanoMessageNano *self);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleProtobufNanoMessageNano)

#endif

#pragma pop_macro("ComGoogleProtobufNanoMessageNano_INCLUDE_ALL")
